library(tidyverse)
library(RColorBrewer)
library(paletteer)
library(tidyverse)
library(RColorBrewer)
library(paletteer)
library(janitor)
options(scipen=999) #cancels the use of scientific notation for the session
homerange <- read_csv("data/Tamburelloetal_HomeRangeDatabase.csv", na = c("", "NA", "\\"))
p <- homerange %>%
ggplot(aes(x=taxon, fill=trophic.guild))+
geom_bar(na.rm=T, position="dodge")
p
p + theme_linedraw()+
theme(axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
q <- homerange %>%
ggplot(aes(x = log10.mass, y = log10.preymass, color = taxon))+
geom_jitter()+
labs(title = "log10 mass vs log10 preymass", x = "log10 mass", y = "log10 preymass")
q
q+
theme_classic()
p+theme_linedraw()+
theme(legend.position = "top", #adjusts the position of the legend
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
#install.packages("ggthemes")
library(ggthemes)
ls("package:ggthemes")[grepl("theme_", ls("package:ggthemes"))]
p +
theme_stata()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
q+
theme_stata()
?RColorBrewer
display.brewer.pal(5,"Accent") #qualitative palette
p+scale_fill_brewer(palette = "Set2")+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
q+
theme_stata()+
scale_color_brewer(palette = "Dark2") #changes the color of the dots
colors <- paletteer::palettes_d_names
my_palette <- paletteer_d("ggsci::nrc_npg")
barplot(rep(1,10), axes=FALSE, col=my_palette)
p+scale_fill_manual(values=my_palette)+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
q+
scale_color_manual(values=my_palette)
homerange %>%
ggplot(aes(x=taxon, y=log10.mass, fill=trophic.guild))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 60, hjust=1))
homerange %>%
ggplot(aes(x=taxon, y=log10.mass, fill=taxon))+
geom_boxplot()+
facet_wrap(~trophic.guild, ncol=2, labeller=label_both)+
theme(axis.text.x = element_text(angle = 60, hjust=1),
legend.position = "none",
strip.text = element_text(size = 12, face = "bold"))
homerange %>%
ggplot(aes(x=taxon, y=log10.mass))+
geom_boxplot()+
facet_grid(trophic.guild~.)+
theme(axis.text.x = element_text(angle = 60, hjust=1))
homerange %>%
ggplot(aes(x=taxon, y=log10.mass))+
geom_boxplot()+
facet_grid(.~trophic.guild)+
theme(axis.text.x = element_text(angle = 60, hjust=1))
homerange %>%
ggplot(aes(x=taxon, y=log10.mass))+
geom_boxplot()+
facet_grid(trophic.guild~thermoregulation)+
theme(axis.text.x = element_text(angle = 60, hjust=1))
homerange %>%
ggplot(aes(x = log10.mass))+
geom_histogram()+
facet_wrap(~thermoregulation, ncol = 2, labeller = "label_both")+
theme_stata()
homerange %>%
ggplot(aes(x = log10.mass))+
geom_histogram()+
facet_grid(.~locomotion)+
theme_stata()
library(shiny); runApp('final project/shinyapp.R')
# UI
ui <- fluidPage(
textInput("legend_title", "Enter Legend Title:", "Default Legend"),
plotOutput("plot")
)
# Server
server <- function(input, output) {
output$plot <- renderPlot({
ggplot(df, aes(x, y, color = category)) +
geom_point(size = 4) +
labs(color = input$legend_title) +  # Directly using input$legend_title
theme(legend.title = element_text(size = 14, face = "bold"))  # Styling legend title
})
}
# Run the app
shinyApp(ui, server)
runApp('final project/shinyapp.R')
runApp('final project/shinyapp.R')
runApp('final project/shinyapp.R')
library(tidyverse)
library(shiny)
library(shinydashboard)
require(janitor)
library(palmerpenguins)
homerange <- read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
homerange <- read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
wolves <- read_csv("data/wolves_data/wolves_dataset.csv")
wolves %>%
filter(sex!="NA") %>%
ggplot(aes(x=sex, fill=sex))+
geom_bar()+
facet_wrap(~pop)
#install.packages("shinythemes")
library(shinythemes)
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(title = "Homerange Dashboard"),
## Sidebar content
dashboardSidebar(
sidebarMenu(
menuItem("Log10 HRA",
tabName = "dashboard",
icon = icon("dashboard")),
menuItem("Counts",
tabName = "widgets",
icon = icon("th"))
)
),
## Body content
dashboardBody(
tabItems(
## First tab content
tabItem(tabName = "dashboard",
fluidRow(
box(plotOutput("plot1", height = 250)), # box is a container for the plot
box(title = "Controls", # box is a container for the controls
selectInput("taxon",
"Select Taxon of Interest:",
choices=unique(homerange$taxon))
)
)
),
## Second tab item
tabItem(tabName = "widgets",
fluidRow(
box(plotOutput("plot2", height = 250)), # box is a container for the plot
box(title = "Controls", # box is a container for the controls
radioButtons("x",
"Select Fill Variable",
choices=c("trophic.guild", "thermoregulation"),
selected="trophic.guild")
)
)
)
)
)
)
server <- function(input, output, session) {
output$plot1 <- renderPlot({
homerange %>%
filter(taxon == input$taxon) %>%
ggplot(aes(x = log10.hra)) +
geom_density(color = "black", fill = "steelblue", alpha = 0.6)
})
output$plot2 <- renderPlot({
homerange %>%
ggplot(aes_string(x="locomotion", fill=input$x))+
geom_bar(position="dodge", alpha=0.8, color="black")+
labs(x=NULL, y=NULL, fill="Fill Variable")
})
}
shinyApp(ui, server)
names(tf_ps)
runApp('final project/shinyapp.R')
knitr::opts_chunk$set(echo = TRUE)
#install.packages("sf")
library(tidyverse)
library(janitor)
library(gtools)
library(sf)
library(ggmap)
names(genomics_tf_ps)
knitr::opts_chunk$set(echo = TRUE)
#install.packages("sf")
library(tidyverse)
library(janitor)
library(gtools)
library(sf)
library(ggmap)
register_stadiamaps("1d92513d-1a7f-407d-8c65-60d0d510c9c0", write = FALSE)
tf <- read.csv("data/landscapegenetics/TF_pipits_2011.csv") %>% clean_names() #16 var
ps <- read.csv("data/landscapegenetics/PS_pipits_2016.csv") %>% clean_names() #15 var
tf_1 <- tf %>% select(!autocov1000m) #redefine tf as a different df
tf_ps <- full_join(tf_1,ps) #join all data frames together
# add the word "copies" to all the following
genomics <- read_csv("data/landscapegenetics/TF_PS_pipits.csv") %>%
rename("5239s1.T_copies" = "5239s1.T",
"7259s1.A.copies" = "7259s1.A",
"TLR4_1.G_copies" = "TLR4_1.G",
"TLR4_2.A_copies" = "TLR4_2.A",
"TLR4_3.C_copies" = "TLR4_3.C",
"TLR4_4.C_copies" = "TLR4_4.C") %>%
clean_names()
names(genomics) <- sub('^x', "", names(genomics)) #substitute any col names beginning with "x" with a blank string
genomics_tf_ps <- left_join(tf_ps, genomics, by = "sample")
options(scipen=999)
genomics_tf_ps <- genomics_tf_ps %>%
mutate(malaria = if_else(malaria == "1", "Y", "N"))
genomics_tf_ps <- genomics_tf_ps %>%
mutate(age = if_else(age=="A", "adult", "juvenile")) #I spelled it right this time!
genomics_tf_ps <- genomics_tf_ps %>%
select(!utm)
#genomics_tf_ps <- genomics_tf_ps %>%
#  mutate(tlr4_het = if_else(tlr4_het == 0, "homozygous", "heterozygous"))
genomics_tf_ps <- genomics_tf_ps %>%
mutate(across(ends_with("het"), #if the var name ends with "het"
~if_else(.x==0, "homozygous", "heterozygous")))
# Check to see if it ends with 0 (homozygous). Otherwise, heterozygous.
# Should we consider shortening it to "homo" and "hetero"? Might be easier to read.
quartileswater <- quantcut(genomics_tf_ps$distwater)
table(quartileswater)
quartilesurban <- quantcut(genomics_tf_ps$dist_urb)
table(quartilesurban)
quartilesfarm <- quantcut(genomics_tf_ps$distfarm)
table(quartilesfarm)
quartilespoul <- quantcut(genomics_tf_ps$distpoul)
table(quartilespoul)
genomics_tf_ps <- genomics_tf_ps %>%
mutate(distwater_cat = case_when(distwater <= 105 ~ "close",
distwater > 105 & distwater <= 258 ~ "median close",
distwater > 258 & distwater <= 725 ~ "median far",
distwater > 725 ~ "far"))
genomics_tf_ps <- genomics_tf_ps %>%
mutate(disturb_cat = case_when(dist_urb <= 45 ~ "close",
dist_urb > 45 & dist_urb <= 108 ~ "median close",
dist_urb > 108 & dist_urb <= 282 ~ "median far",
dist_urb > 282 ~ "far"))
genomics_tf_ps <- genomics_tf_ps %>%
mutate(distfarm_cat = case_when(distfarm <= 429 ~ "close",
distfarm > 429 & distfarm <= 723 ~ "median close",
distfarm > 723 & distfarm <= 1240 ~ "median far",
distfarm > 1240 ~ "far"))
genomics_tf_ps <- genomics_tf_ps %>%
mutate(distpoul_cat = case_when(distpoul <= 860 ~ "close",
distpoul > 860 & distpoul <= 1830 ~ "median close",
distpoul> 1830 & distpoul <= 3410 ~ "median far",
distpoul > 3410 ~ "far"))
genomics_tf_ps %>%
select(sample, distwater_cat, distfarm_cat, disturb_cat, distpoul_cat)
genomics_tf_ps <- genomics_tf_ps %>%
mutate(across(matches("_[acgt]$|_prot_[1234]$"), ~if_else(.x== 0, "absent", "present")))
tf_ps_latlong <- st_as_sf(genomics_tf_ps, coords = c("easting", "northing"), crs = "+proj=utm +zone=28 +datum=WGS84 +units=m +north")
tf_ps_latlong <- st_transform(tf_ps_latlong, crs = 4326)
genomics_tf_ps <- genomics_tf_ps %>%
mutate(longitude = st_coordinates(tf_ps_latlong)[,1],
latitude = st_coordinates(tf_ps_latlong)[,2])
genomics_tf_ps %>%
select(sample, latitude, longitude)
genomics_tf_ps %>%
filter(island == "TF") %>%
select(latitude, longitude) %>%
summary()
latitude <- c(28.01, 28.58)
longitude <- c(-16.92, -16.18)
tf_bbox <- make_bbox(longitude, latitude, f = 0.05)
tf_map <- get_stadiamap(tf_bbox, maptype = "stamen_terrain", zoom=12)
ggmap(tf_map)+
geom_point(data = genomics_tf_ps, aes(longitude, latitude, color = malaria), size=1) +
labs(x= "Longitude", y= "Latitude", title = "Bird Locations of Tenerife")
genomics_tf_ps %>%
filter(island == "PS") %>%
select(latitude, longitude) %>%
summary()
latitude <- c(33.03, 33.10)
longitude <- c(-16.39, -16.3)
ps_bbox <- make_bbox(longitude, latitude, f = 0.05)
ps_map <- get_stadiamap(ps_bbox, maptype = "stamen_terrain", zoom=12)
ggmap(ps_map)+
geom_point(data = genomics_tf_ps, aes(longitude, latitude, color = malaria), size=1) +
labs(x= "Longitude", y= "Latitude", title = "Bird Locations of Porto Santo")
names(genomics_tf_ps)
write.csv(genomics_tf_ps, "data/landscapegenetics/genomics_tf_ps.csv", row.names = FALSE)
runApp('final project/shinyapp.R')
genomics_tf_ps %>%
select(sample, distwater_cat, distfarm_cat, disturb_cat, distpoul_cat) %>%
ggplot(aes(x = distwater_cat, y = malaria))+
geom_col()
genomics_tf_ps %>%
ggplot(aes(x = distwater_cat, y = malaria))+
geom_col()
genomics_tf_ps %>%
ggplot(aes(x = distwater_cat, y = malaria))+
geom_col()+
coord_flip()
genomics_tf_ps %>%
select(sample, distwater_cat, malaria)+
na.omit() %>%
ggplot(aes(x = distwater_cat, y = malaria))+
geom_col()+
coord_flip()
genomics_tf_ps %>%
select(sample, distwater_cat, malaria) %>%
na.omit() %>%
ggplot(aes(x = distwater_cat, y = malaria))+
geom_col()+
coord_flip()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
genomics_tf_ps <- read.csv("data/landscapegenetics/genomics_tf_ps.csv") %>% clean_names()
names(genomics_tf_ps)
genomics_tf_ps %>%
filter(!is.na(malaria)&!is.na(x5239s1_a)&!is.na(x5239s1_t)) %>%
ggplot(aes(malaria))+
geom_bar()+
facet_grid(x5239s1_a~x5239s1_t)+
labs(
title = "Chances of Malaria by SNP Allele",
x = "Malaria",
)+
theme(plot.title = element_text(hjust=0.5))
snp_plot_data <- genomics_tf_ps %>%
filter(!is.na(malaria)&!is.na(x5239s1_a)&!is.na(x5239s1_t)) %>%
group_by(malaria, x5239s1_a, x5239s1_t) %>%
summarize(n=n(), .groups = 'keep') %>%
group_by(x5239s1_a, x5239s1_t) %>%
mutate(perc = 100*n/sum(n))
snp_plot_data %>%
ggplot(aes(malaria, perc))+
geom_col()+
facet_grid(x5239s1_a~x5239s1_t)
runApp('final project/shinyapp.R')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
tf_ps <- read_csv("data/landscapegenetics/genomics_tf_ps.csv")
tf_ps %>%
group_by(malaria, distwater_cat) %>%
summarize(n=n(), .groups = 'keep') %>%
ggplot(aes(x = distwater_cat, y = n))+
geom_col()
tf_ps %>%
group_by(malaria, distwater_cat) %>%
summarize(n=n(), .groups = 'keep') %>%
mutate(perc = 100*n/sum(n)) %>%
ggplot(aes(x = distwater_cat, y = perc))+
geom_col()
tf_ps %>%
group_by(malaria, distwater_cat) %>%
summarize(n=n(), .groups = 'keep') %>%
mutate(perc = 100*(n/sum(n))) %>%
ggplot(aes(x = distwater_cat, y = perc))+
geom_col()
tf_ps %>%
group_by(malaria, distwater_cat) %>%
summarize(n=n(), .groups = 'keep') %>%
mutate(perc = 1*n/sum(n)) %>%
ggplot(aes(x = distwater_cat, y = perc))+
geom_col()
tf_ps %>%
group_by(malaria, distwater_cat) %>%
summarize(n=n(), .groups = 'keep') %>%
mutate(perc = 100*n/sum(n)) %>%
ggplot(aes(x = distwater_cat, y = perc))+
geom_col()
tf_ps %>%
group_by(malaria, distwater_cat) %>%
summarize(n=n(), .groups = 'keep')
#mutate(perc = 100*n/sum(n)) %>%
#ggplot(aes(x = distwater_cat, y = perc))+
#geom_col()
tf_ps %>%
group_by(malaria, distwater_cat) %>%
summarize(n=n(), .groups = 'keep') %>%
mutate(perc = 100*n/sum(n))
#ggplot(aes(x = distwater_cat, y = perc))+
#geom_col()
tf_ps %>%
group_by(malaria, distwater_cat) %>%
summarize(n=n(), .groups = 'keep') %>%
group_by(malaria, distwater_cat)
mutate(perc = 100*n/sum(n))
tf_ps %>%
group_by(malaria, distwater_cat) %>%
summarize(n=n(), .groups = 'keep') %>%
group_by(malaria, distwater_cat) %>%
mutate(perc = 100*n/sum(n))
#ggplot(aes(x = distwater_cat, y = perc))+
#geom_col()
tf_ps %>%
group_by(malaria, distwater_cat) %>%
summarize(n=n(), .groups = 'keep') %>%
group_by(distwater_cat) %>%
mutate(perc = 100*n/sum(n))
#ggplot(aes(x = distwater_cat, y = perc))+
#geom_col()
tf_ps %>%
group_by(malaria, distwater_cat) %>%
summarize(n=n(), .groups = 'keep') %>%
group_by(distwater_cat) %>%
mutate(perc = 100*n/sum(n)) %>%
ggplot(aes(x = distwater_cat, y = perc))+
geom_col()
tf_ps %>%
group_by(malaria, distwater_cat) %>%
summarize(n=n(), .groups = 'keep') %>%
group_by(distwater_cat) %>%
mutate(perc = 100*n/sum(n))
#ggplot(aes(x = distwater_cat, y = perc))+
#geom_col()
tf_ps %>%
group_by(malaria, distwater_cat) %>%
summarize(n=n(), .groups = 'keep') %>%
group_by(distwater_cat) %>%
mutate(perc = 100*n/sum(n))
ggplot(aes(x = distwater_cat, y = perc, fill = malaria))+
geom_col(pos = "dodge")
tf_ps %>%
group_by(malaria, distwater_cat) %>%
summarize(n=n(), .groups = 'keep') %>%
group_by(distwater_cat) %>%
mutate(perc = 100*n/sum(n)) %>%
ggplot(aes(x = distwater_cat, y = perc, fill = malaria))+
geom_col(pos = "dodge")
tf_ps %>%
group_by(malaria, distwater_cat) %>%
summarize(n=n(na.rm = T), .groups = 'keep') %>%
group_by(distwater_cat) %>%
mutate(perc = 100*n/sum(n)) %>%
ggplot(aes(x = distwater_cat, y = perc, fill = malaria))+
geom_col(pos = "dodge")
tf_ps %>%
group_by(malaria, distwater_cat) %>%
summarize(n=n(), .groups = 'keep') %>%
group_by(distwater_cat) %>%
mutate(perc = 100*n/sum(n)) %>%
ggplot(aes(x = distwater_cat, y = perc, fill = malaria))+
geom_col(pos = "dodge")
tf_ps %>%
group_by(malaria, distwater_cat) %>%
summarize(n=n(), .groups = 'keep') %>%
group_by(distwater_cat) %>%
mutate(perc = 100*n/sum(n)) %>%
filter(malaria == "Y") %>%
ggplot(aes(x = distwater_cat, y = perc))+
geom_col()
tf_ps %>%
group_by(malaria, distpoul_cat) %>%
summarize(n=n(), .groups = 'keep') %>%
group_by(distpoul_cat) %>%
mutate(perc = 100*n/sum(n)) %>%
filter(malaria == "Y") %>%
ggplot(aes(x = distpoul_cat, y = perc))+
geom_col()
runApp('final project/shinyapp.R')
runApp('final project/shinyapp.R')
library(shiny); runApp('shinyapp.R')
runApp('shinyapp.R')
runApp('shinyapp.R')
