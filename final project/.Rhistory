tf_ps <- read_csv("data/landscapegenetics/genomics_tf_ps.csv")
source("C:/Users/wilja/OneDrive/Desktop/BIS015L-Final-Project/final project/shinyapp.R", echo=TRUE)
source("C:/Users/wilja/OneDrive/Desktop/BIS015L-Final-Project/final project/shinyapp.R", echo=TRUE)
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(title = "Homerange Dashboard"),
## Sidebar content
dashboardSidebar(
sidebarMenu(
menuItem("Log10 HRA",
tabName = "dashboard",
icon = icon("dashboard")),
menuItem("Counts",
tabName = "widgets",
icon = icon("th"))
)
),
## Body content
dashboardBody(
tabItems(
## First tab content
tabItem(tabName = "dashboard",
fluidRow(
box(plotOutput("plot1", height = 250)), # box is a container for the plot
box(title = "Controls", # box is a container for the controls
selectInput("taxon",
"Select Taxon of Interest:",
choices=unique(homerange$taxon))
)
)
),
## Second tab item
tabItem(tabName = "widgets",
fluidRow(
box(plotOutput("plot2", height = 250)), # box is a container for the plot
box(title = "Controls", # box is a container for the controls
radioButtons("x",
"Select Fill Variable",
choices=c("trophic.guild", "thermoregulation"),
selected="trophic.guild")
)
)
)
)
)
)
library(tidyverse)
library(shiny)
library(shinydashboard)
require(janitor)
library(palmerpenguins)
homerange <- read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
homerange <- read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
wolves <- read_csv("data/wolves_data/wolves_dataset.csv")
wolves %>%
filter(sex!="NA") %>%
ggplot(aes(x=sex, fill=sex))+
geom_bar()+
facet_wrap(~pop)
#install.packages("shinythemes")
library(shinythemes)
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(title = "Homerange Dashboard"),
## Sidebar content
dashboardSidebar(
sidebarMenu(
menuItem("Log10 HRA",
tabName = "dashboard",
icon = icon("dashboard")),
menuItem("Counts",
tabName = "widgets",
icon = icon("th"))
)
),
## Body content
dashboardBody(
tabItems(
## First tab content
tabItem(tabName = "dashboard",
fluidRow(
box(plotOutput("plot1", height = 250)), # box is a container for the plot
box(title = "Controls", # box is a container for the controls
selectInput("taxon",
"Select Taxon of Interest:",
choices=unique(homerange$taxon))
)
)
),
## Second tab item
tabItem(tabName = "widgets",
fluidRow(
box(plotOutput("plot2", height = 250)), # box is a container for the plot
box(title = "Controls", # box is a container for the controls
radioButtons("x",
"Select Fill Variable",
choices=c("trophic.guild", "thermoregulation"),
selected="trophic.guild")
)
)
)
)
)
)
server <- function(input, output, session) {
output$plot1 <- renderPlot({
homerange %>%
filter(taxon == input$taxon) %>%
ggplot(aes(x = log10.hra)) +
geom_density(color = "black", fill = "steelblue", alpha = 0.6)
})
output$plot2 <- renderPlot({
homerange %>%
ggplot(aes_string(x="locomotion", fill=input$x))+
geom_bar(position="dodge", alpha=0.8, color="black")+
labs(x=NULL, y=NULL, fill="Fill Variable")
})
}
shinyApp(ui, server)
source("C:/Users/wilja/OneDrive/Desktop/BIS015L-Final-Project/final project/shinyapp.R", echo=TRUE)
runApp('shinyapp.R')
runApp('shinyapp.R')
runApp('shinyapp.R')
runApp('shinyapp.R')
runApp('shinyapp.R')
runApp('shinyapp.R')
runApp('shinyapp.R')
runApp('shinyapp.R')
runApp('shinyapp.R')
runApp('shinyapp.R')
runApp('shinyapp.R')
runApp('shinyapp.R')
runApp('shinyapp.R')
runApp('shinyapp.R')
runApp('shinyapp.R')
runApp('shinyapp.R')
runApp('shinyapp.R')
runApp('shinyapp.R')
runApp('shinyapp.R')
library(tidyverse)
library(janitor)
#install.packages("ggmap")
library(ggmap)
register_stadiamaps("1d92513d-1a7f-407d-8c65-60d0d510c9c0", write = FALSE)
spiders <- read_csv("data/spiders_with_locs.csv")%>% clean_names()
spiders <- spiders %>% filter(latitude<=42)
spiders %>%
select(latitude, longitude) %>%
summary()
lat <- c(34.67, 41.80)
long <- c(-124.1, -115.5)
bbox <- make_bbox(long, lat, f = 0.03) #f is the fraction of the bounding box to add to the range
map1 <- get_stadiamap(bbox, maptype = "stamen_terrain", zoom=7)
ggmap(map1)
ggmap(map1) +
geom_point(data = spiders, aes(longitude, latitude), size=0.4) +
labs(x= "Longitude", y= "Latitude", title="Spider Locations")
sharks <- read_csv("data/SharkIncidents_1950_2022_220302.csv") %>%
clean_names() %>%
filter(longitude !="NA" & latitude !="NA") %>% # pulling out NA locations
mutate(longitude = as.numeric(longitude)) # converting longitude to numeric
sharks_dups <- sharks %>%
distinct(location, .keep_all = TRUE) # remove duplicate locations, but keep the remaining variables
sharks_dups %>%
select(latitude, longitude) %>%
summary()
attack_lat <- c(32.59, 41.56)
attack_long <- c(-117.1, -124.7)
attack_bbox <- make_bbox(attack_long, attack_lat, f = 0.05)
attackmap <- get_stadiamap(attack_bbox, maptype = "stamen_terrain", zoom = 6)
ggmap(attackmap)
ggmap(attackmap) +
geom_point(data = sharks_dups, aes(longitude, latitude), size = 1) +
labs(x= "Longitude", y= "Latitude", title="Shark Attack Locations")
fatal_sharks_dups <- sharks_dups %>%
filter(injury == "fatal")
ggmap(attackmap) +
geom_point(data = fatal_sharks_dups, aes(longitude, latitude), size = 1) +
labs(x= "Longitude", y= "Latitude", title="Shark Attack Locations")
runApp('shinyapp.R')
runApp('shinyapp.R')
runApp('shinyapp.R')
runApp('shinyapp.R')
runApp('shinyapp.R')
runApp('shinyapp.R')
runApp('shinyapp.R')
runApp('shinyapp.R')
runApp('shinyapp.R')
runApp('shinyapp.R')
runApp('shinyapp.R')
runApp('shinyapp.R')
runApp('shinyapp.R')
names(tf_ps)
runApp('shinyapp.R')
runApp('shinyapp.R')
runApp('shinyapp.R')
